{"version":3,"file":"ios.js","sourceRoot":"","sources":["../../src/platforms/ios.ts"],"names":[],"mappings":";;;;;;AAAA,0DAA6B;AAC7B,wDAA0B;AAC1B,gDAAwB;AAIxB;;GAEG;AACI,KAAK,UAAU,kBAAkB,CACtC,WAAmB,EACnB,QAAyB,EACzB,OAAsB;IAEtB,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,mBAAI,CAAC,aAAa,EAAE;QAC9C,GAAG,EAAE,QAAQ,CAAC,IAAI;QAClB,MAAM,EAAE,CAAC,oBAAoB,CAAC;KAC/B,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,OAAO,GAAG,cAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,cAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACtE,MAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAAC,cAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;IAEvE,OAAO;QACL,OAAO;QACP,UAAU;QACV,KAAK,EAAE,OAAO,CAAC,KAAK;KACrB,CAAC;AACJ,CAAC;AAtBD,gDAsBC;AAED;;GAEG;AACI,KAAK,UAAU,wBAAwB,CAC5C,OAA2B,EAC3B,UAAkB;IAElB,MAAM,SAAS,GAAG,cAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACtE,MAAM,oBAAoB,GAAG,MAAM,mCAAmC,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAE3F,MAAM,kBAAE,CAAC,UAAU,CACjB,yHAAyH,EACzH,oBAAoB,CACrB,CAAC;AACJ,CAAC;AAXD,4DAWC;AAED;;GAEG;AACH,KAAK,UAAU,mCAAmC,CAChD,OAA2B,EAC3B,SAAiB;IAEjB,OAAO;;;;;eAKM,SAAS;;;;;;;CAOvB,CAAC;AACF,CAAC","sourcesContent":["import glob from 'fast-glob';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { ModuleDescriptor, PackageRevision, SearchOptions } from '../types';\n\n/**\n * Resolves module search result with additional details required for iOS platform.\n */\nexport async function resolveModuleAsync(\n  packageName: string,\n  revision: PackageRevision,\n  options: SearchOptions\n): Promise<ModuleDescriptor | null> {\n  const [podspecFile] = await glob('*/*.podspec', {\n    cwd: revision.path,\n    ignore: ['**/node_modules/**'],\n  });\n\n  if (!podspecFile) {\n    return null;\n  }\n\n  const podName = path.basename(podspecFile, path.extname(podspecFile));\n  const podspecDir = path.dirname(path.join(revision.path, podspecFile));\n\n  return {\n    podName,\n    podspecDir,\n    flags: options.flags,\n  };\n}\n\n/**\n * Generates Swift file that contains all autolinked Swift packages.\n */\nexport async function generatePackageListAsync(\n  modules: ModuleDescriptor[],\n  targetPath: string\n): Promise<void> {\n  const className = path.basename(targetPath, path.extname(targetPath));\n  const generatedFileContent = await generatePackageListFileContentAsync(modules, className);\n\n  await fs.outputFile(\n    '/Users/tomasz/Work/expo/ios/Pods/Target Support Files/Pods-Expo Go-Expo Go (unversioned)/ExpoSwiftModulesProvider.swift',\n    generatedFileContent\n  );\n}\n\n/**\n * Generates the string to put into the generated package list.\n */\nasync function generatePackageListFileContentAsync(\n  modules: ModuleDescriptor[],\n  className: string\n): Promise<string> {\n  return `// Automatically generated by expo-modules-autolinking.\n\nimport UMCore\n\n@objc\npublic class ${className}: ModulesProvider {\n  func exportedModules() -> [Module] {\n    return [\n      BaseModule()\n    ]\n  }\n}\n`;\n}\n"]}